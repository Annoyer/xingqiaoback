<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="model.Orders" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="demand_id" property="demandId" jdbcType="INTEGER" />
    <result column="recover_ob" property="recoverOb" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="status_p" property="statusP" jdbcType="INTEGER" />
    <result column="status_t" property="statusT" jdbcType="INTEGER" />
    <result column="s_time" property="sTime" jdbcType="VARCHAR" />
    <result column="e_time" property="eTime" jdbcType="VARCHAR" />
    <result column="isdeleted" property="isdeleted" jdbcType="BIT" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="preferential" property="preferential" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="realpay" property="realpay" jdbcType="DOUBLE" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="way" property="way" jdbcType="VARCHAR" />
    <result column="totalpay" property="totalpay" jdbcType="DOUBLE" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="pay" property="pay" jdbcType="INTEGER" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="pay_way" property="payWay" jdbcType="VARCHAR" />
    <result column="trace" property="trace" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="model.OrdersWithBLOBs" extends="BaseResultMap" >
    <result column="initialevaluated" property="initialevaluated" jdbcType="LONGVARCHAR" />
    <result column="effectevaluated" property="effectevaluated" jdbcType="LONGVARCHAR" />
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
    <result column="server_time" property="serverTime" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, teacher_id, parent_id, demand_id, recover_ob, reason, status_p, status_t, s_time, 
    e_time, isdeleted, amount, preferential, integral, realpay, cid, way, totalpay, complete, 
    pay, trade_no, pay_way, trace
  </sql>
  <sql id="Blob_Column_List" >
    initialevaluated, effectevaluated, remark, server_time
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="model.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.OrdersWithBLOBs" >
    insert into orders (id, teacher_id, parent_id, 
      demand_id, recover_ob, reason, 
      status_p, status_t, s_time, 
      e_time, isdeleted, amount, 
      preferential, integral, realpay, 
      cid, way, totalpay, 
      complete, pay, trade_no, 
      pay_way, trace, initialevaluated, 
      effectevaluated, remark, server_time
      )
    values (#{id,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{demandId,jdbcType=INTEGER}, #{recoverOb,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{statusP,jdbcType=INTEGER}, #{statusT,jdbcType=INTEGER}, #{sTime,jdbcType=VARCHAR}, 
      #{eTime,jdbcType=VARCHAR}, #{isdeleted,jdbcType=BIT}, #{amount,jdbcType=INTEGER}, 
      #{preferential,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, #{realpay,jdbcType=DOUBLE}, 
      #{cid,jdbcType=INTEGER}, #{way,jdbcType=VARCHAR}, #{totalpay,jdbcType=DOUBLE}, 
      #{complete,jdbcType=INTEGER}, #{pay,jdbcType=INTEGER}, #{tradeNo,jdbcType=VARCHAR}, 
      #{payWay,jdbcType=VARCHAR}, #{trace,jdbcType=VARCHAR}, #{initialevaluated,jdbcType=LONGVARCHAR}, 
      #{effectevaluated,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, #{serverTime,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.OrdersWithBLOBs" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="demandId != null" >
        demand_id,
      </if>
      <if test="recoverOb != null" >
        recover_ob,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="statusP != null" >
        status_p,
      </if>
      <if test="statusT != null" >
        status_t,
      </if>
      <if test="sTime != null" >
        s_time,
      </if>
      <if test="eTime != null" >
        e_time,
      </if>
      <if test="isdeleted != null" >
        isdeleted,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="preferential != null" >
        preferential,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="realpay != null" >
        realpay,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="way != null" >
        way,
      </if>
      <if test="totalpay != null" >
        totalpay,
      </if>
      <if test="complete != null" >
        complete,
      </if>
      <if test="pay != null" >
        pay,
      </if>
      <if test="tradeNo != null" >
        trade_no,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="trace != null" >
        trace,
      </if>
      <if test="initialevaluated != null" >
        initialevaluated,
      </if>
      <if test="effectevaluated != null" >
        effectevaluated,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="serverTime != null" >
        server_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="demandId != null" >
        #{demandId,jdbcType=INTEGER},
      </if>
      <if test="recoverOb != null" >
        #{recoverOb,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="statusP != null" >
        #{statusP,jdbcType=INTEGER},
      </if>
      <if test="statusT != null" >
        #{statusT,jdbcType=INTEGER},
      </if>
      <if test="sTime != null" >
        #{sTime,jdbcType=VARCHAR},
      </if>
      <if test="eTime != null" >
        #{eTime,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=BIT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="preferential != null" >
        #{preferential,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="realpay != null" >
        #{realpay,jdbcType=DOUBLE},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="way != null" >
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="totalpay != null" >
        #{totalpay,jdbcType=DOUBLE},
      </if>
      <if test="complete != null" >
        #{complete,jdbcType=INTEGER},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="trace != null" >
        #{trace,jdbcType=VARCHAR},
      </if>
      <if test="initialevaluated != null" >
        #{initialevaluated,jdbcType=LONGVARCHAR},
      </if>
      <if test="effectevaluated != null" >
        #{effectevaluated,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="serverTime != null" >
        #{serverTime,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectParentRefundRequest" resultMap="BaseResultMap">
      SELECT * FROM orders where status_p = 4
    </select>
    <select id="selectTeacherRefundRequest" resultMap="BaseResultMap">
      SELECT * FROM orders where status_p = 5
    </select>
    <select id="selectAllRefundToDeal" resultMap="BaseResultMap">
      SELECT * FROM orders where status_p = 6
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.demandId != null" >
        demand_id = #{record.demandId,jdbcType=INTEGER},
      </if>
      <if test="record.recoverOb != null" >
        recover_ob = #{record.recoverOb,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.statusP != null" >
        status_p = #{record.statusP,jdbcType=INTEGER},
      </if>
      <if test="record.statusT != null" >
        status_t = #{record.statusT,jdbcType=INTEGER},
      </if>
      <if test="record.sTime != null" >
        s_time = #{record.sTime,jdbcType=VARCHAR},
      </if>
      <if test="record.eTime != null" >
        e_time = #{record.eTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isdeleted != null" >
        isdeleted = #{record.isdeleted,jdbcType=BIT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.preferential != null" >
        preferential = #{record.preferential,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.realpay != null" >
        realpay = #{record.realpay,jdbcType=DOUBLE},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.way != null" >
        way = #{record.way,jdbcType=VARCHAR},
      </if>
      <if test="record.totalpay != null" >
        totalpay = #{record.totalpay,jdbcType=DOUBLE},
      </if>
      <if test="record.complete != null" >
        complete = #{record.complete,jdbcType=INTEGER},
      </if>
      <if test="record.pay != null" >
        pay = #{record.pay,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null" >
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payWay != null" >
        pay_way = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.trace != null" >
        trace = #{record.trace,jdbcType=VARCHAR},
      </if>
      <if test="record.initialevaluated != null" >
        initialevaluated = #{record.initialevaluated,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.effectevaluated != null" >
        effectevaluated = #{record.effectevaluated,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.serverTime != null" >
        server_time = #{record.serverTime,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update orders
    set id = #{record.id,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      demand_id = #{record.demandId,jdbcType=INTEGER},
      recover_ob = #{record.recoverOb,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      status_p = #{record.statusP,jdbcType=INTEGER},
      status_t = #{record.statusT,jdbcType=INTEGER},
      s_time = #{record.sTime,jdbcType=VARCHAR},
      e_time = #{record.eTime,jdbcType=VARCHAR},
      isdeleted = #{record.isdeleted,jdbcType=BIT},
      amount = #{record.amount,jdbcType=INTEGER},
      preferential = #{record.preferential,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      realpay = #{record.realpay,jdbcType=DOUBLE},
      cid = #{record.cid,jdbcType=INTEGER},
      way = #{record.way,jdbcType=VARCHAR},
      totalpay = #{record.totalpay,jdbcType=DOUBLE},
      complete = #{record.complete,jdbcType=INTEGER},
      pay = #{record.pay,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      trace = #{record.trace,jdbcType=VARCHAR},
      initialevaluated = #{record.initialevaluated,jdbcType=LONGVARCHAR},
      effectevaluated = #{record.effectevaluated,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR},
      server_time = #{record.serverTime,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set id = #{record.id,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      demand_id = #{record.demandId,jdbcType=INTEGER},
      recover_ob = #{record.recoverOb,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      status_p = #{record.statusP,jdbcType=INTEGER},
      status_t = #{record.statusT,jdbcType=INTEGER},
      s_time = #{record.sTime,jdbcType=VARCHAR},
      e_time = #{record.eTime,jdbcType=VARCHAR},
      isdeleted = #{record.isdeleted,jdbcType=BIT},
      amount = #{record.amount,jdbcType=INTEGER},
      preferential = #{record.preferential,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      realpay = #{record.realpay,jdbcType=DOUBLE},
      cid = #{record.cid,jdbcType=INTEGER},
      way = #{record.way,jdbcType=VARCHAR},
      totalpay = #{record.totalpay,jdbcType=DOUBLE},
      complete = #{record.complete,jdbcType=INTEGER},
      pay = #{record.pay,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      trace = #{record.trace,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.OrdersWithBLOBs" >
    update orders
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="demandId != null" >
        demand_id = #{demandId,jdbcType=INTEGER},
      </if>
      <if test="recoverOb != null" >
        recover_ob = #{recoverOb,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="statusP != null" >
        status_p = #{statusP,jdbcType=INTEGER},
      </if>
      <if test="statusT != null" >
        status_t = #{statusT,jdbcType=INTEGER},
      </if>
      <if test="sTime != null" >
        s_time = #{sTime,jdbcType=VARCHAR},
      </if>
      <if test="eTime != null" >
        e_time = #{eTime,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null" >
        isdeleted = #{isdeleted,jdbcType=BIT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="preferential != null" >
        preferential = #{preferential,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="realpay != null" >
        realpay = #{realpay,jdbcType=DOUBLE},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="totalpay != null" >
        totalpay = #{totalpay,jdbcType=DOUBLE},
      </if>
      <if test="complete != null" >
        complete = #{complete,jdbcType=INTEGER},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="trace != null" >
        trace = #{trace,jdbcType=VARCHAR},
      </if>
      <if test="initialevaluated != null" >
        initialevaluated = #{initialevaluated,jdbcType=LONGVARCHAR},
      </if>
      <if test="effectevaluated != null" >
        effectevaluated = #{effectevaluated,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="serverTime != null" >
        server_time = #{serverTime,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.OrdersWithBLOBs" >
    update orders
    set teacher_id = #{teacherId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      demand_id = #{demandId,jdbcType=INTEGER},
      recover_ob = #{recoverOb,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      status_p = #{statusP,jdbcType=INTEGER},
      status_t = #{statusT,jdbcType=INTEGER},
      s_time = #{sTime,jdbcType=VARCHAR},
      e_time = #{eTime,jdbcType=VARCHAR},
      isdeleted = #{isdeleted,jdbcType=BIT},
      amount = #{amount,jdbcType=INTEGER},
      preferential = #{preferential,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      realpay = #{realpay,jdbcType=DOUBLE},
      cid = #{cid,jdbcType=INTEGER},
      way = #{way,jdbcType=VARCHAR},
      totalpay = #{totalpay,jdbcType=DOUBLE},
      complete = #{complete,jdbcType=INTEGER},
      pay = #{pay,jdbcType=INTEGER},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_way = #{payWay,jdbcType=VARCHAR},
      trace = #{trace,jdbcType=VARCHAR},
      initialevaluated = #{initialevaluated,jdbcType=LONGVARCHAR},
      effectevaluated = #{effectevaluated,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR},
      server_time = #{serverTime,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Orders" >
    update orders
    set teacher_id = #{teacherId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      demand_id = #{demandId,jdbcType=INTEGER},
      recover_ob = #{recoverOb,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      status_p = #{statusP,jdbcType=INTEGER},
      status_t = #{statusT,jdbcType=INTEGER},
      s_time = #{sTime,jdbcType=VARCHAR},
      e_time = #{eTime,jdbcType=VARCHAR},
      isdeleted = #{isdeleted,jdbcType=BIT},
      amount = #{amount,jdbcType=INTEGER},
      preferential = #{preferential,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      realpay = #{realpay,jdbcType=DOUBLE},
      cid = #{cid,jdbcType=INTEGER},
      way = #{way,jdbcType=VARCHAR},
      totalpay = #{totalpay,jdbcType=DOUBLE},
      complete = #{complete,jdbcType=INTEGER},
      pay = #{pay,jdbcType=INTEGER},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_way = #{payWay,jdbcType=VARCHAR},
      trace = #{trace,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="acceptRefundRequestFromParent" parameterType="java.lang.String">
    update orders
    set status_p = 6,
      status_t = 6
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="acceptRefundRequestFromTeacher" parameterType="java.lang.String">
    update orders
    set status_p = 9,
    status_t = 9
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="rejectRefund" parameterType="java.lang.String">
    update orders
    set status_p = 3,
    status_t = 3
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <update id="refundSuccessFromParent" parameterType="java.lang.String">
      update orders
      set status_p = 14,
      status_t = 14
      where id = #{id,jdbcType=VARCHAR}
    </update>
  <update id="refundSuccessFromTeacher" parameterType="java.lang.String">
    update orders
    set status_p = 13,
    status_t = 13
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getOrderPayByOid" resultMap="BaseResultMap">
    SELECT * FROM orders WHERE id=#{orderId} AND o.teacher_id=t.id AND o.parent_id=p.id
  </select>
</mapper>