<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.OrderviewMapper" >
  <resultMap id="BaseResultMap" type="model.Orderview" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="demand_id" property="demandId" jdbcType="INTEGER" />
    <result column="demand_name" property="demandName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="parent_name" property="parentName" jdbcType="VARCHAR" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="isdeleted" property="isdeleted" jdbcType="BIT" />
    <result column="s_time" property="sTime" jdbcType="VARCHAR" />
    <result column="recover_ob" property="recoverOb" jdbcType="VARCHAR" />
    <result column="realpay" property="realpay" jdbcType="DOUBLE" />
    <result column="totalpay" property="totalpay" jdbcType="DOUBLE" />
    <result column="pay_way" property="payWay" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="status_p" property="statusP" jdbcType="INTEGER" />
    <result column="status_t" property="statusT" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="model.Orderview" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, teacher_id, teacher_name, demand_id, demand_name, parent_id, parent_name, complete, 
    isdeleted, s_time, recover_ob, realpay, totalpay, pay_way, reason, amount, status_p, 
    status_t
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="model.OrderviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orderview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.OrderviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="model.OrderviewExample" >
    delete from orderview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Orderview" >
    insert into orderview (id, teacher_id, teacher_name, 
      demand_id, demand_name, parent_id, 
      parent_name, complete, isdeleted, 
      s_time, recover_ob, realpay, 
      totalpay, pay_way, reason, 
      amount, status_p, status_t, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, 
      #{demandId,jdbcType=INTEGER}, #{demandName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{parentName,jdbcType=VARCHAR}, #{complete,jdbcType=INTEGER}, #{isdeleted,jdbcType=BIT}, 
      #{sTime,jdbcType=VARCHAR}, #{recoverOb,jdbcType=VARCHAR}, #{realpay,jdbcType=DOUBLE}, 
      #{totalpay,jdbcType=DOUBLE}, #{payWay,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{statusP,jdbcType=INTEGER}, #{statusT,jdbcType=INTEGER}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.Orderview" >
    insert into orderview
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="demandId != null" >
        demand_id,
      </if>
      <if test="demandName != null" >
        demand_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="parentName != null" >
        parent_name,
      </if>
      <if test="complete != null" >
        complete,
      </if>
      <if test="isdeleted != null" >
        isdeleted,
      </if>
      <if test="sTime != null" >
        s_time,
      </if>
      <if test="recoverOb != null" >
        recover_ob,
      </if>
      <if test="realpay != null" >
        realpay,
      </if>
      <if test="totalpay != null" >
        totalpay,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="statusP != null" >
        status_p,
      </if>
      <if test="statusT != null" >
        status_t,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="demandId != null" >
        #{demandId,jdbcType=INTEGER},
      </if>
      <if test="demandName != null" >
        #{demandName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentName != null" >
        #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="complete != null" >
        #{complete,jdbcType=INTEGER},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=BIT},
      </if>
      <if test="sTime != null" >
        #{sTime,jdbcType=VARCHAR},
      </if>
      <if test="recoverOb != null" >
        #{recoverOb,jdbcType=VARCHAR},
      </if>
      <if test="realpay != null" >
        #{realpay,jdbcType=DOUBLE},
      </if>
      <if test="totalpay != null" >
        #{totalpay,jdbcType=DOUBLE},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="statusP != null" >
        #{statusP,jdbcType=INTEGER},
      </if>
      <if test="statusT != null" >
        #{statusT,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.OrderviewExample" resultType="java.lang.Integer" >
    select count(*) from orderview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderview
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherName != null" >
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.demandId != null" >
        demand_id = #{record.demandId,jdbcType=INTEGER},
      </if>
      <if test="record.demandName != null" >
        demand_name = #{record.demandName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.parentName != null" >
        parent_name = #{record.parentName,jdbcType=VARCHAR},
      </if>
      <if test="record.complete != null" >
        complete = #{record.complete,jdbcType=INTEGER},
      </if>
      <if test="record.isdeleted != null" >
        isdeleted = #{record.isdeleted,jdbcType=BIT},
      </if>
      <if test="record.sTime != null" >
        s_time = #{record.sTime,jdbcType=VARCHAR},
      </if>
      <if test="record.recoverOb != null" >
        recover_ob = #{record.recoverOb,jdbcType=VARCHAR},
      </if>
      <if test="record.realpay != null" >
        realpay = #{record.realpay,jdbcType=DOUBLE},
      </if>
      <if test="record.totalpay != null" >
        totalpay = #{record.totalpay,jdbcType=DOUBLE},
      </if>
      <if test="record.payWay != null" >
        pay_way = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.statusP != null" >
        status_p = #{record.statusP,jdbcType=INTEGER},
      </if>
      <if test="record.statusT != null" >
        status_t = #{record.statusT,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update orderview
    set id = #{record.id,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      demand_id = #{record.demandId,jdbcType=INTEGER},
      demand_name = #{record.demandName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      parent_name = #{record.parentName,jdbcType=VARCHAR},
      complete = #{record.complete,jdbcType=INTEGER},
      isdeleted = #{record.isdeleted,jdbcType=BIT},
      s_time = #{record.sTime,jdbcType=VARCHAR},
      recover_ob = #{record.recoverOb,jdbcType=VARCHAR},
      realpay = #{record.realpay,jdbcType=DOUBLE},
      totalpay = #{record.totalpay,jdbcType=DOUBLE},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      status_p = #{record.statusP,jdbcType=INTEGER},
      status_t = #{record.statusT,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderview
    set id = #{record.id,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      demand_id = #{record.demandId,jdbcType=INTEGER},
      demand_name = #{record.demandName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      parent_name = #{record.parentName,jdbcType=VARCHAR},
      complete = #{record.complete,jdbcType=INTEGER},
      isdeleted = #{record.isdeleted,jdbcType=BIT},
      s_time = #{record.sTime,jdbcType=VARCHAR},
      recover_ob = #{record.recoverOb,jdbcType=VARCHAR},
      realpay = #{record.realpay,jdbcType=DOUBLE},
      totalpay = #{record.totalpay,jdbcType=DOUBLE},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      status_p = #{record.statusP,jdbcType=INTEGER},
      status_t = #{record.statusT,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT * FROM orderview
  </select>
  <select id="selectTeacherIdByParentId" resultType="java.lang.Integer">
    SELECT DISTINCT teacher_id FROM orderview WHERE parent_id=#{parentId,jdbcType=INTEGER}
  </select>
  <select id="selectParentRefundRequest" resultMap="BaseResultMap">
    SELECT * FROM orderview where status_p=4
  </select>
  <select id="selectTeacherRefundRequest" resultMap="BaseResultMap">
    SELECT * FROM orderview where status_p=5
  </select>
  <select id="selectAllRefundToDeal" resultMap="BaseResultMap">
    SELECT * FROM orderview where status_p=6 OR status_t=9
  </select>
</mapper>